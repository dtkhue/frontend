[{"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Features.tsx":"1","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Footer.tsx":"2","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Header.tsx":"3","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Hero.tsx":"4","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Navbar.tsx":"5","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/SearchBar.tsx":"6","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/theme.ts":"7","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/_app.tsx":"8","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/index.tsx":"9","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/stock_dashboard/[ticker].tsx":"10","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/GoogleAnalytics.js":"11","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Chart/CandleStick.tsx":"12","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/HistoricalData/HistoricalData.tsx":"13","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/Summary/Summary.tsx":"14","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/Summary/SummaryChart.tsx":"15","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerCard.tsx":"16","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerCardTab.tsx":"17","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerDailyPrice.tsx":"18","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Utils/DownloadFile.tsx":"19","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Utils/DateFilter.tsx":"20"},{"size":411,"mtime":1680297352560,"results":"21","hashOfConfig":"22"},{"size":275,"mtime":1680297352560,"results":"23","hashOfConfig":"22"},{"size":247,"mtime":1680297352560,"results":"24","hashOfConfig":"22"},{"size":310,"mtime":1680297352570,"results":"25","hashOfConfig":"22"},{"size":2919,"mtime":1681093598825,"results":"26","hashOfConfig":"22"},{"size":1703,"mtime":1680981961872,"results":"27","hashOfConfig":"22"},{"size":723,"mtime":1680297352570,"results":"28","hashOfConfig":"22"},{"size":343,"mtime":1680399353102,"results":"29","hashOfConfig":"22"},{"size":2135,"mtime":1681095465925,"results":"30","hashOfConfig":"22"},{"size":2045,"mtime":1681093467175,"results":"31","hashOfConfig":"22"},{"size":493,"mtime":1680489893898,"results":"32","hashOfConfig":"22"},{"size":8341,"mtime":1681094714355,"results":"33","hashOfConfig":"22"},{"size":3744,"mtime":1681092270305,"results":"34","hashOfConfig":"22"},{"size":2280,"mtime":1680922483608,"results":"35","hashOfConfig":"22"},{"size":0,"mtime":1680645614745,"results":"36","hashOfConfig":"22"},{"size":363,"mtime":1681093699665,"results":"37","hashOfConfig":"22"},{"size":4976,"mtime":1681093687375,"results":"38","hashOfConfig":"22"},{"size":3574,"mtime":1681095520495,"results":"39","hashOfConfig":"22"},{"size":792,"mtime":1680980372882,"results":"40","hashOfConfig":"22"},{"size":1369,"mtime":1681092641545,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b1ifzb",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Features.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Footer.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Header.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Hero.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Navbar.tsx",["109"],[],"import React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Hidden from \"@mui/material/Hidden\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Link from \"next/link\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n  const toggleDrawer = (open: boolean) => {\r\n    setDrawerOpen(open);\r\n  };\r\n\r\n  const navItems = [\r\n    { title: \"Home\", href: \"/\" },\r\n    { title: \"About\", href: \"/about\" },\r\n    { title: \"Blog\", href: \"/blog\" },\r\n  ];\r\n\r\n  const NavButton = ({ title, href }: { title: string; href: string }) => (\r\n    <Link href={href} passHref>\r\n      <Button color=\"inherit\">{title}</Button>\r\n    </Link>\r\n  );\r\n\r\n  const navButtons = navItems.map((item) => (\r\n    <NavButton key={item.title} title={item.title} href={item.href} />\r\n  ));\r\n\r\n  const ListItemLink = ({ title, href }: { title: string; href: string }) => (\r\n    <Link href={href} passHref>\r\n      <ListItem button component=\"a\">\r\n        <ListItemText primary={title} />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n\r\n  const drawList = (\r\n    <List>\r\n      {navItems.map((item) => (\r\n        <ListItemLink key={item.title} title={item.title} href={item.href} />\r\n      ))}\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{width:\"100%\"}}>\r\n      <Toolbar sx={{ maxWidth: \"none\" }}>\r\n        <Box display=\"flex\" alignItems=\"center\" sx={{ width: \"100%\" }}>\r\n          <img src=\"/brandlogo.png\" alt=\"Brand Logo\" height=\"100\" />\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, marginLeft: 2 }}\r\n          >\r\n            Nessight\r\n          </Typography>\r\n        </Box>\r\n        {/* <Hidden mdDown>\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\" }}>\r\n            {navButtons}\r\n          </Box>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Box\r\n            sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={() => toggleDrawer(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Hidden> */}\r\n      </Toolbar>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={() => toggleDrawer(false)}\r\n      >\r\n        {drawList}\r\n      </Drawer>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/SearchBar.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/theme.ts",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/_app.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/index.tsx",["110"],[],"import Navbar from \"@/components/Navbar\";\nimport SearchBar from \"@/components/SearchBar\";\nimport Box from \"@mui/material/Box\";\n\nimport Head from 'next/head';\nimport TickerCard from \"@/components/TickerCard/TickerCard\";\n\nexport default function TickerDashboard(): any {\n  const ticker = \"AAPL\";\n  const keywords = ticker ? [\n    `${ticker} stock price`,\n    `${ticker} market cap`,\n    `${ticker} financials`,\n    `${ticker} earnings`,\n    `${ticker} stock analysis`,\n    `${ticker} trading`,\n  ] : [];\n\n  return (\n    <>\n      <Head>\n        <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-37TGZ3H0PC\"></script>\n        <script dangerouslySetInnerHTML={{\n          __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n\n            gtag('config', 'G-37TGZ3H0PC');\n          `\n        }} />\n        <meta name=\"description\" content={`View detailed stock information for ${ticker} on Nessight.com. Get the latest stock price, financials, earnings, and more.`} />\n        <title>Stock Dashboard for {ticker}</title>\n        <link rel=\"icon\" sizes=\"1280x1024\" href=\"/IconOnly_Transparent.png\" />\n        <link rel=\"shortcut icon\" sizes=\"1280x1024\" href=\"/IconOnly_Transparent.png\" />\n        <meta name=\"keywords\" content={keywords.join(\", \")} />\n      </Head>\n      <Navbar />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 5,\n          paddingTop: { xs: \"56px\", md: \"100px\" },\n          paddingBottom: { xs: \"56px\", md: \"100px\" },\n          minHeight: \"100vh\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box sx={{ width: \"100%\", maxWidth: \"960px\" }}>\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\", mb: 5 }}>\n            <SearchBar />\n          </Box>\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\" }}>\n            <Box sx={{ width: \"100%\", maxWidth: \"600px\" }}>\n              <TickerCard ticker={ticker} />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/pages/stock_dashboard/[ticker].tsx",["111"],[],"import { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport SearchBar from \"../../components/SearchBar\";\nimport Box from \"@mui/material/Box\";\n\nimport Head from 'next/head';\nimport TickerCard from \"@/components/TickerCard/TickerCard\";\nexport default function TickerDashboard(): any {\n  const router = useRouter();\n  const ticker = router.query.ticker;\n  const keywords = ticker ? [\n    `${ticker} stock price`,\n    `${ticker} market cap`,\n    `${ticker} financials`,\n    `${ticker} earnings`,\n    `${ticker} stock analysis`,\n    `${ticker} trading`,\n  ] : [];\n  return (\n    <>\n    <Head>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-37TGZ3H0PC\"></script>\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n\n            gtag('config', 'G-37TGZ3H0PC');\n          `\n        }}\n      />\n      <meta name=\"description\" content={`View detailed stock information for ${ticker} on Nessight.com. Get the latest stock price, financials, earnings, and more.`} />\n      <title>Stock Dashboard for {ticker}</title>\n      <link rel=\"icon\" sizes=\"1280x1024\" href=\"/IconOnly_Transparent.png\" />\n      <link rel=\"shortcut icon\" sizes=\"1280x1024\"  href=\"/IconOnly_Transparent.png\" />\n      <meta name=\"keywords\" content={keywords.join(\", \")} />\n    </Head>\n    <Navbar />\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 5,\n      }}\n    >\n      \n      <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\" }}>\n        <SearchBar />\n       \n      </Box>\n     \n    </Box>\n    <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"center\", width: \"100%\", marginTop: \"50px\" }}>\n        <Box sx={{width:\"600px\"}}>\n          {typeof ticker === 'string' && <TickerCard ticker={ticker} />}\n        </Box>\n    </Box>\n    \n    </>\n  );\n}\n\n","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/GoogleAnalytics.js",["112"],[],"import Head from 'next/head';\n\nconst GoogleAnalyticsScript = () => (\n  <Head>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-37TGZ3H0PC\"></script>\n    <script\n      dangerouslySetInnerHTML={{\n        __html: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-37TGZ3H0PC');\n        `\n      }}\n    />\n  </Head>\n);\n\nexport default GoogleAnalyticsScript;","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Chart/CandleStick.tsx",["113"],[],"import React, {use, useEffect,useState} from \"react\";\nimport * as echarts from \"echarts\";\nimport axios from \"axios\";\ntype EchartsOption = echarts.EChartsOption;\nimport { Box } from \"@mui/material\";\nimport {CircularProgress} from \"@mui/material\";\n//Begin InterFace\ninterface TickerSeriesData{\n  close: number;\n  high: number;\n  low: number;\n  num_transaction: number;\n  open: number;\n  trading_volume: number;\n  ticker: string;\n  adjusted: boolean;\n  date: string;\n}\n\ninterface Props {\n  ticker:string;\n}\n\n//End InterFace\n\n//Time Series Function\nfunction calculateMA(dayCount: number, data: number[][]): (number | string)[] {\n  const result = [];\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (i < dayCount) {\n      result.push('-');\n      continue;\n    }\n    let sum = 0;\n    for (let j = 0; j < dayCount; j++) {\n      const currentData = data[i - j];\n      if (currentData) {\n        sum += currentData[1];\n      }\n    }\n    result.push(sum / dayCount);\n  }\n  return result;\n}\n\n//End Time Series Function\n\n\n\nexport const CandleStickChart: React.FC<Props> =({ticker}:{ticker:string})=>{\n  const [rawData,setRawData]= useState<TickerSeriesData[]>([]);\n  const [hasNext,setHasNext]=useState(true);\n  const [currentPage,setCurrentPage]=useState(1);\n  const [initState,setInitState]=useState(true);\n  const size = 50;\n  const [url,setUrl]=useState<string>()\n  \n  \n  \n\n  \n  useEffect(() => {\n    if (ticker) {\n      setUrl(`https://api.nessight.com/api/v1/beta/tickers/Series/${ticker}?page=${currentPage}&sort_order=desc&page_size=${size}`);\n    }\n  }, [ticker, currentPage]);\n\n  \n  //initial Fetch \n  useEffect(\n    ()=>{\n      if(ticker && initState &&url){\n        axios.get(url).then(\n          (res) => {\n            setRawData((prevData: any[]) => sortRawDataByDateAsc([...prevData,...res.data.items ]));\n            if (res.data.has_next) {\n              setHasNext(true);\n            } else {\n              setHasNext(false);\n            }\n            setInitState(false)\n          }\n\n        ).catch((error) => {\n          console.log(error)\n        })\n      } else if(ticker && !initState && url &&hasNext){\n        axios.get(url).then(\n          (res) => {\n            setRawData((prevData: any[]) => sortRawDataByDateAsc([...prevData,...res.data.items]));\n            if (res.data.has_next) {\n              setHasNext(true);\n            } else {\n              setHasNext(false);\n            }\n          }\n\n        ).catch((error) => {\n          console.log(error)\n        })\n      }\n    },[url]\n  )\n   \n  \n  const onZoom = (params: any) => {\n    const zoomStart = params.batch[0].start;\n    const zoomEnd = params.batch[0].end;\n    console.log(zoomStart);\n    console.log(zoomEnd);\n    if (zoomEnd -zoomStart <95){\n      setCurrentPage ((prevPage)=>prevPage+1)\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"Data loaded from backend: \", rawData.length);\n    if(rawData.length>0){\n      const sdates=SerializeDate(rawData);\n      const ChartData=SerializeChartData(rawData);\n      const chartDom=document.getElementById(\"main\")!;\n      const myChart=echarts.init(chartDom);\n      const option: EchartsOption=getCandleStickChartOption({Dates:sdates,ChartData:ChartData});\n      option && myChart.setOption(option);\n      myChart.on(\"datazoom\",onZoom);\n  \n      return () =>{\n        myChart.off(\"datazoom\", onZoom);\n        myChart.dispose();\n      };\n    }\n   \n  }, [ticker,rawData]);\n\n  return (\n    <>\n      {rawData.length > 0 ? (\n        <div id=\"main\" style={{ width: \"100%\", height: \"500px\" }}> </div>\n      ) : (\n        <>\n          {initState ? (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"100%\"\n              marginTop=\"100px\"\n            >\n              <CircularProgress />\n              Loading Data ....\n            </Box>\n          ) : (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"100%\"\n              marginTop=\"100px\"\n            >\n              Data not available\n            </Box>\n          )}\n        </>\n      )}\n    </>\n  );\n\n};\n\nfunction SerializeDate(rawData:TickerSeriesData[]){\n    const data=rawData.map((item:TickerSeriesData) =>item.date)\n    return data\n}\nfunction sortRawDataByDateAsc(rawData: TickerSeriesData[]): TickerSeriesData[] {\n  const sortedRawData = [...rawData].sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateA.getTime() - dateB.getTime();\n  });\n  return sortedRawData;\n}\nfunction SerializeChartData(rawData:TickerSeriesData[]){\n    const chartData=rawData.map(function(item){\n        return [+item.open, +item.close, +item.low, +item.high]\n    })\n    return chartData;\n}\n\nfunction getCandleStickChartOption({Dates,ChartData}:{Dates: string[]; ChartData: number[][] }){\n\n    const option = {\n        \n        tooltip: {\n          trigger: 'axis' as const,\n          axisPointer: {\n            animation: false,\n            type: 'cross' as const,\n            lineStyle: {\n              color: '#376df4',\n              width: 2,\n              opacity: 1\n            }\n          }\n        },\n        xAxis: {\n          type: 'category' as const,\n          data: Dates,\n          axisLine: { lineStyle: { color: '#8392A5' } },\n          splitLine: { show: true }, \n          scale: true,\n          boundaryGap: false,\n          min: \"dataMin\",\n          max: \"dataMax\",\n        },\n        yAxis: {\n          scale: true,\n          axisLine: { lineStyle: { color: '#8392A5' } },\n          splitArea: {\n            show: true,\n          },\n          splitLine: { show: true }\n          \n        },\n        grid: {\n          bottom: 80\n        },\n        dataZoom:[\n          {\n            type:'inside',\n            showDetail:false,\n            end: 100,\n            start:30,\n            minspan:30\n          }\n        ],\n        // dataZoom: [\n        //   {\n        //     textStyle: {\n        //       color: '#8392A5'\n        //     },\n        //     handleIcon:\n        //       'path://M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n        //     dataBackground: {\n        //       areaStyle: {\n        //         color: '#8392A5'\n        //       },\n        //       lineStyle: {\n        //         opacity: 0.8,\n        //         color: '#8392A5'\n        //       }\n        //     },\n        //     brushSelect: true\n        //   },\n        //   {\n        //     type: 'inside'\n        //   }\n        // ],\n        series: [\n          {\n            type: 'candlestick' as const,\n            name: 'CandleStick',\n            data: ChartData,\n            itemStyle: {\n              color: '#FD1050',\n              color0: '#0CF49B',\n              borderColor: '#FD1050',\n              borderColor0: '#0CF49B'\n            }\n          },\n          // {\n          //   name: 'MA5',\n          //   type: 'line' as const,\n          //   data: calculateMA(5, ChartData),\n          //   smooth: true,\n          //   showSymbol: false,\n          //   lineStyle: {\n          //     width: 1\n          //   }\n          // },\n          // {\n          //   name: 'MA10',\n          //   type: 'line' as const,\n          //   data: calculateMA(10, ChartData),\n          //   smooth: true,\n          //   showSymbol: false,\n          //   lineStyle: {\n          //     width: 1\n          //   }\n          // },\n          // {\n          //   name: 'MA20',\n          //   type: 'line' as const,\n          //   data: calculateMA(20, ChartData),\n          //   smooth: true,\n          //   showSymbol: false,\n          //   lineStyle: {\n          //     width: 1\n          //   }\n          // },\n          // {\n          //   name: 'MA30',\n          //   type: 'line' as const,\n          //   data: calculateMA(30, ChartData),\n          //   smooth: true,\n          //   showSymbol: false,\n          //   lineStyle: {\n          //     width: 1\n          //   }\n          // }\n        ],\n        animationDuration: 1000, // set the duration of the animation\n        animationEasing: 'cubicOut' as const // set the easing function for the animation\n      };\n    return option;\n\n      \n\n    \n}","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/HistoricalData/HistoricalData.tsx",["114"],[],"import  React,{useState,useEffect} from 'react';\nimport { Button, Table } from '@mui/material';\nimport { TableBody } from '@mui/material';\nimport { TableCell } from '@mui/material';\nimport { TableContainer } from '@mui/material';\nimport { TableHead } from '@mui/material';\nimport { TableRow } from '@mui/material';\nimport { Paper } from '@mui/material';\nimport Box from '@mui/material';\nimport axios from 'axios';\nimport {TablePagination} from '@mui/material';\ninterface TickerSeriesData{\n  close: number;\n  high: number;\n  low: number;\n  num_transaction: number;\n  open: number;\n  trading_volume: number;\n  ticker: string;\n  adjusted: boolean;\n  date: string;\n}\ninterface Props {\n    ticker:string;\n\n}\n\n\n\nexport const HistoricalDataTable: React.FC<Props> =({ticker})=> {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [rawData,setrawData]=useState<TickerSeriesData[]>([]);\n  const [currentPage,setcurrentPage]=useState(1);\n  const size=50;\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (newPage >= Math.floor(rawData.length / rowsPerPage)-5) {\n      setcurrentPage((prev) => prev + 1);\n    }\n  };\n  \n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  const [url,setURL]=useState(\"\")\n  \n  useEffect(()=>{\n    if (ticker){\n      setURL(`https://api.nessight.com/api/v1/beta/tickers/Series/${ticker}?page=${currentPage}&sort_order=desc&page_size=${size}`)\n    }\n  },[ticker,currentPage])\n  useEffect(()=>{\n    if (url!=\"\") {\n      axios.get(url).then((res)=>{\n        const newRawData = [...rawData, ...res.data.items];\n        setrawData(newRawData);\n      }).catch((error) => {\n        console.log(error);\n      })\n    }\n  },[url])\n \n  return (\n  \n\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: '800px'}} aria-label=\"Historical Table\">\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">Date</TableCell>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">Open</TableCell>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">High</TableCell>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">Low</TableCell>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">Close</TableCell>\n            <TableCell sx={{ fontSize: '13px' }} align=\"center\">Volume</TableCell>\n          </TableRow>\n        </TableHead>\n          <TableBody>\n            {rawData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) =>  (\n              <TableRow\n                key={row.date}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.date}</TableCell>\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.open}</TableCell>\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.high}</TableCell>\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.low}</TableCell>\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.close}</TableCell>\n                <TableCell sx={{ fontSize: '13px' }} align=\"center\">{row.num_transaction}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n      </Table>\n      <TablePagination\n      rowsPerPageOptions={[10, 25, 50]}\n      component=\"div\"\n      count={rawData.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onPageChange={handleChangePage}\n      onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n   \n  )\n}\n","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/Summary/Summary.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/Tabs/Summary/SummaryChart.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerCard.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerCardTab.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/TickerCard/TickerDailyPrice.tsx",["115","116"],[],"\nimport React from 'react';\nimport { Card, Typography, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useEffect,useState } from 'react';\nimport axios from 'axios';\nimport {CircularProgress} from '@mui/material';\n//Begin InterFace\ninterface BasicInfo{\n  cik: string;\n  name: string;\n  type:string;\n  active:string;\n  locale:string;\n  market:string;\n  ticker:string;\n  currency_name:string;\n  composite_figi: string;\n  last_updated_utc:string;\n  primary_exchange: string;\n  share_class_figi: string\n}\ninterface TickerSeriesData{\n  close: number;\n  high: number;\n  low: number;\n  num_transaction: number;\n  open: number;\n  trading_volume: number;\n  ticker: string;\n  adjusted: boolean;\n  date: string;\n}\n\n\n//End Interface\n\n\n//Custom Styled \nconst CustomCard = styled(Card)({\n  backgroundColor: 'transparent',\n  border: 'none',\n  padding: '20px',\n\n  marginBottom:'20px'\n});\n\nconst TickerName = styled(Typography)({\n  fontWeight: 'bold',\n  fontSize: '18px',\n});\n\nconst TickerinCurrency=styled(Typography)({\n  fontSize: '14px',\n  color: 'gray',\n})\nconst TickerDescription = styled(Typography)({\n  fontSize: '14px',\n  color: 'gray',\n});\n\nconst TickerPrice = styled(Typography)({\n  fontWeight: 'bold',\n  fontSize: '24px',\n  marginRight: '10px',\n\n});\n\nconst PriceChange = styled(Typography)(({ priceChange }:{priceChange:number}) => ({\n  fontSize: '18px',\n  color: priceChange >= 0 ? 'green' : 'red',\n \n}));\n\n//End CustomStyle\n\n\n\n\n\nexport const TickerDailyPrice: React.FC<{ ticker: string }> = ({ ticker })=> {\n\n  const [LoadedBasicInfo, setLoadedBasicInfo]=useState(false);\n  const [BasicInfoData,setBasicInfoData]=useState<BasicInfo>();\n  const [rawData,setrawData]=useState<TickerSeriesData[]>([]);\n  const [LoadingrawData,setLoadingrawData]=useState(false);\n\n  useEffect(() =>{\n    if (ticker && !LoadingrawData){\n    axios.get(`https://api.nessight.com/api/v1/beta/tickers/Series/${ticker}?page=1&page_size=2&sort_order=desc`).then((res)=>{\n        setrawData((prevData: any[]) => [...prevData, ...res.data.items]);\n        setLoadingrawData(true);\n    })\n    }\n  },[ticker]);  \n  useEffect(()=>{\n    const basicInfourl=\"https://api.nessight.com/api/v1/beta/tickers/basicinfo/\"\n      if (ticker && !LoadedBasicInfo){\n        axios.get(basicInfourl+ticker).then((res)=>{\n          if (res.data.items.length >0){\n            setBasicInfoData(res.data.items[0]);\n          }\n          setLoadedBasicInfo(true);\n        })\n        \n      }\n  },[ticker])\n  \n  return (\n    <>\n      {LoadedBasicInfo && LoadingrawData ? (\n       \n        <CustomCard>\n          <TickerName>{ticker}</TickerName>\n          <TickerDescription>{BasicInfoData?.name}</TickerDescription>\n          <TickerinCurrency>\n            In Currency {BasicInfoData?.currency_name.toUpperCase()}{\" \"}\n          </TickerinCurrency>\n          {rawData.length >0 ? (\n            <Box display=\"flex\" alignItems=\"baseline\">\n              <TickerPrice>{rawData?.[1].close}</TickerPrice>\n              <PriceChange priceChange={(rawData?.[1].close - rawData?.[0].close)}>\n                {(rawData?.[1].close - rawData?.[0].close).toFixed(2)} {`(${((rawData?.[1].close - rawData?.[0].close) / rawData?.[0].close).toFixed(2)}%)`}\n              </PriceChange>\n            </Box>\n          ):(<></>)}\n        </CustomCard>\n      ) : (\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"100%\"\n          marginTop=\"100px\"\n        >\n          <CircularProgress />\n          Loading Data ....\n        </Box>\n      )}\n    </>\n  );\n\n}\n","/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Utils/DownloadFile.tsx",[],[],"/home/tien_nguyen/tiennguyen/options/front_end_app/app/src/components/Utils/DateFilter.tsx",[],[],{"ruleId":"117","severity":1,"message":"118","line":58,"column":11,"nodeType":"119","endLine":58,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":22,"column":9,"nodeType":"119","endLine":22,"endColumn":86},{"ruleId":"120","severity":1,"message":"121","line":23,"column":5,"nodeType":"119","endLine":23,"endColumn":82},{"ruleId":"120","severity":1,"message":"121","line":5,"column":5,"nodeType":"119","endLine":5,"endColumn":82},{"ruleId":"122","severity":1,"message":"123","line":102,"column":7,"nodeType":"124","endLine":102,"endColumn":12,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":65,"column":5,"nodeType":"124","endLine":65,"endColumn":10,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":95,"column":5,"nodeType":"124","endLine":95,"endColumn":13,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":107,"column":5,"nodeType":"124","endLine":107,"endColumn":13,"suggestions":"131"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","@next/next/next-script-for-ga","Prefer `next/script` component when using the inline script for Google Analytics. See: https://nextjs.org/docs/messages/next-script-for-ga","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hasNext', 'initState', and 'ticker'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'rawData'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'LoadingrawData'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'LoadedBasicInfo'. Either include it or remove the dependency array.",["135"],{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [hasNext, initState, ticker, url]",{"range":"144","text":"145"},"Update the dependencies array to be: [rawData, url]",{"range":"146","text":"147"},"Update the dependencies array to be: [LoadingrawData, ticker]",{"range":"148","text":"149"},"Update the dependencies array to be: [LoadedBasicInfo, ticker]",{"range":"150","text":"151"},[2511,2516],"[hasNext, initState, ticker, url]",[1842,1847],"[rawData, url]",[2090,2098],"[LoadingrawData, ticker]",[2464,2472],"[LoadedBasicInfo, ticker]"]